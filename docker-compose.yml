version: "3.9"
services:
  user-service-nginx:
    build:
      context: ./user-service
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - user-service-php
    volumes:
      - ./user-service:/var/www/html
      - ./user-service/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - user-service_network
  user-service-php:
    build:
      context: ./user-service
      dockerfile: Dockerfile.php
    depends_on:
      - rabbitmq
      - db
    env_file:
      - ./user-service/.env
    volumes:
      - ./user-service:/var/www/html
    networks:
      - user-service_network

  notification-service:
    build: ./notification-service
    ports:
      - "8002:9001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./notification-service/.env
    networks:
      - notification-service_network
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    networks:
      - user-service_network
      - notification-service_network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: database
    volumes:
      - .docker/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./db-data:/var/lib/mysql
    networks:
      - user-service_network


networks:
  user-service_network:
    driver: bridge
  notification-service_network:
    driver: bridge